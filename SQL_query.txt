CREATE SCHEMA prac_proj_2;

USE prac_proj_2;

CREATE TABLE user (user_id INT AUTO_INCREMENT PRIMARY KEY, 
	username VARCHAR(30) NOT NULL UNIQUE, 
	account_creation DATETIME DEFAULT CURRENT_TIMESTAMP, 
	last_login DATETIME DEFAULT NULL,
	total_points INT NOT NULL
);

CREATE TABLE points_record (
    points_record_id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    reasons VARCHAR(255) NOT NULL,
    points INT NOT NULL
);	

CREATE TABLE orders (
    order_id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    user_id INT NOT NULL,
    ordertime DATETIME DEFAULT CURRENT_TIMESTAMP,
    status VARCHAR(30) NOT NULL,
    last_updatetime DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    price DECIMAL(10, 2) NOT NULL,
    FOREIGN KEY (user_id) REFERENCES user(user_id)
);

CREATE TABLE order_items (
    order_item_id INT NOT NULL PRIMARY KEY,
    order_id INT NOT NULL,
    quantity INT NOT NULL,
    FOREIGN KEY (order_id) REFERENCES orders(order_id)
);

CREATE TABLE item (
    item_id INT NOT NULL PRIMARY KEY, 
    item_name VARCHAR(30) NOT NULL, 
    item_description VARCHAR(30), 
    stock_quantity DECIMAL(10, 2) NOT NULL, 
    unit_name VARCHAR(10), 
    last_updatetime DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, 
    low_stock_quantity DECIMAL(10, 2), 
    price DECIMAL(10, 2) NOT NULL,
    picture BLOB 
);

CREATE TABLE ingredient (
    item_to_create_id INT NOT NULL, 
    ingredient_item_id INT NOT NULL, 
    quantity DECIMAL(10, 2) NOT NULL, 
    last_updatetime DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, 
    PRIMARY KEY (item_to_create_id, ingredient_item_id),
    FOREIGN KEY (item_to_create_id) REFERENCES item(item_id), 
    FOREIGN KEY (ingredient_item_id) REFERENCES item(item_id) 
);